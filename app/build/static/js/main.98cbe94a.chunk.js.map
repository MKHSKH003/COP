{"version":3,"sources":["shared/components/react-use-api/index.js","api/login/index.js","api/organization/index.js","api/event/index.js","shared/constants/api-selectors.js","shared/components/spinner/component.js","shared/utils/images.js","components/events/wizard/event-form.js","components/events/wizard/page/component.js","components/events/event-card/page/component.js","components/events/page/component.js","components/events/page/container.js","components/organization/wizard/organization-form.js","components/organization/wizard/google-maps/map.js","components/organization/wizard/page/component.js","components/organization/organization-card/google-maps/component.js","components/organization/organization-card/page/component.js","components/organization/page/component.js","components/organization/page/container.js","shared/utils/patternfly-bg-images.js","components/login/signup.js","components/login/login.js","components/login/page/component.js","components/login/page/container.js","shared/components/page-wrapper/page/component.js","root/routes.js","serviceWorker.js","index.js","shared/utils/logo/full.png"],"names":["useApi","task","deps","useState","initialValue","data","setData","defer","condition","inProgress","setInProgress","isError","setIsError","execute","a","params","action","result","onSuccess","onError","useEffect","login","loginBaseUrl","username","password","fetch","then","response","json","signup","name","email","logout","getOrganizations","baseUrl","postOrganization","organization","method","body","JSON","stringify","headers","postSubscription","subscription","getEvents","postEvent","event","organizationBaseUrl","isLoading","text","children","active","spinner","uploadAndGetImageUrl","object","onAddObject","firebase","apps","length","initializeApp","appsettings","FirebaseConfig","ref","storage","child","Math","random","toString","substring","put","b64toBlob","avatar","snapshot","getDownloadURL","dataURI","byteString","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","type","readImageURL","input","setObjectImage","files","reader","FileReader","onload","readAsDataURL","setEvent","React","Date","selectedDate","setSelectedDate","selectedOrganization","setSelectedOrganization","Form","isHorizontal","FormGroup","label","isRequired","fieldId","helperText","TextInput","value","id","aria-describedby","onChange","MuiPickersUtilsProvider","utils","DateFnsUtils","disableToolbar","variant","format","margin","date","eventDate","toDateString","KeyboardButtonProps","FormSelect","organisationId","map","option","index","FormSelectOption","isDisabled","disabled","key","Id","Name","TextArea","description","modalheader","setWizardVisible","isAddEventVisible","setAddEventToggle","onAddEvent","addedDate","steps","component","className","file","target","alt","src","nextButtonText","Fragment","Wizard","isOpen","onClose","title","onSave","useStyles","makeStyles","theme","card","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","backgroundColor","red","user","isUserLoggedIn","classes","CardHeader","Avatar","aria-label","organisation","IconButton","subheader","AddedDate","CardMedia","image","CardContent","Typography","color","Description","EventDate","Feeds","PageSection","PageSectionVariants","light","Card","CardBody","eventApi","e","toast","error","message","organizationApi","concat","success","setOrganization","socialIssue","MapContainer","this","props","marker","lat","long","onClick","place","location","position","lng","google","zoom","initialCenter","Component","GoogleApiWrapper","apiKey","MapsApiKey","isAddOrganizationVisible","setAddOrgarnizationToggle","onAddOrganization","locationCordonates","getLocationCordinates","width","display","addSubscription","expanded","setExpanded","Bullseye","CardActionArea","gutterBottom","CardActions","disableSpacing","Button","Subscriptions","filter","s","UserId","userId","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","SocialIssue","paragraph","Location","Email","o","OrganisationId","images","BackgroundImageSrc","lg","require","sm","sm2x","xs","xs2x","SignUpForm","onUserSignup","setName","setEmail","setPassword","icon","Spinner","animation","LoginForm","onUserLogin","setIsUserLoggedIn","SignIn","loginToggle","setLoginToggle","signUpForAccountMessage","LoginMainFooterBandItem","href","LoginPage","footerListVariants","brandImgSrc","brandImg","brandImgAlt","backgroundImgSrc","backgroundImgAlt","textContent","loginTitle","loginSubtitle","setUser","loginDetails","loginApi","Error","signupDetails","userSignup","isNavOpen","onNavToggle","isOrganizationalDropdownOpen","onOrganizationalDropdownToggle","isEventDropdownOpen","onEventDropdownToggle","events","activeNavItem","setActiveNavItem","logoProps","organizationsDropDown","Dropdown","DropdownPosition","right","toggle","DropdownToggle","onToggle","isPlain","dropdownItems","DropdownItem","eventsDropDown","nav","Nav","NavList","NavVariants","horizontal","NavItem","isActive","organizations","pageHeader","PageHeader","logo","topNav","showNavToggle","Page","header","AppRouter","path","PageWrapper","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"igCA0CeA,EAxCA,SAACC,EAAMC,GAAU,IAAD,EACHC,mBAASF,EAAKG,cADX,mBACpBC,EADoB,KACdC,EADc,OAESH,oBAAwB,IAAfF,EAAKM,QAAsC,IAAnBN,EAAKO,WAF/C,mBAEpBC,EAFoB,KAERC,EAFQ,OAGGP,oBAAS,GAHZ,mBAGpBQ,EAHoB,KAGXC,EAHW,KAKrBC,EAAO,sCAAG,0CAAAC,EAAA,4DAAOC,EAAP,+BAAgB,KAAhB,SAERL,GAAc,GACdE,GAAW,GACXN,EAAQL,EAAKG,cAJL,SAMaH,EAAKe,OAAOD,GANzB,OAMFE,EANE,OAQRX,EAAQW,GACRP,GAAc,GAEdT,EAAKiB,WAAajB,EAAKiB,UAAUD,GAXzB,kDAaRL,GAAW,GACXF,GAAc,GAEdT,EAAKkB,SAAWlB,EAAKkB,QAAL,MAhBR,wDAAH,qDA0Bb,OANAC,oBAAU,WACFnB,EAAKM,QAA4B,IAAnBN,EAAKO,WAEvBK,KACDX,GAEI,CACHG,OACAI,aACAE,UACAL,UACAO,YCtCKQ,EAAQ,SAACC,EAAcC,EAAUC,GAAzB,OACjBC,MAAMH,EAAY,qCAAiCC,EAAjC,qBAAsDC,IACnEE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAEtBC,EAAS,SAACP,EAAaQ,EAAMC,EAAOP,GAA3B,OAClBC,MAAMH,EAAY,2BAAuBQ,EAAvB,kBAAqCC,EAArC,qBAAuDP,IACpEE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAEtBI,EAAS,SAACV,EAAcC,GAAf,OAClBE,MAAMH,EAAY,0BAAsBC,IAAYG,KAAK,SAAAC,GAAQ,OAAIA,KCT5DM,EAAmB,SAACC,GAAD,OAC5BT,MAAMS,GAASR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAEhCO,EAAgB,sCAAG,WAAOD,EAASE,GAAhB,SAAAtB,EAAA,8EAC5BW,MAAMS,EAAQ,mBACd,CACIG,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACL,eAAgB,sBAErBf,KAAK,SAACC,GAAD,OAAcA,EAASC,UARH,yCAAH,wDAUhBc,EAAgB,sCAAG,WAAOR,EAASS,GAAhB,SAAA7B,EAAA,8EAC5BW,MAAMS,EAAQ,mBACd,CACIG,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,GACrBF,QAAS,CACL,eAAgB,sBAErBf,KAAK,SAACC,GAAD,OAAcA,EAASC,UARH,yCAAH,wDCbhBgB,EAAY,SAACV,GAAD,OACrBT,MAAMS,GAASR,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAEhCiB,EAAS,sCAAG,WAAOX,EAASY,GAAhB,SAAAhC,EAAA,8EACrBW,MAAMS,EAAQ,YACd,CACIG,OAAQ,OACRC,KAAMC,KAAKC,UAAUM,GACrBL,QAAS,CACL,eAAgB,sBAErBf,KAAK,SAACC,GAAD,OAAcA,EAASC,UARV,yCAAH,wDCDTmB,EAAsBb,8C,+DCIpB,kBACXc,EADW,EACXA,UACAC,EAFW,EAEXA,KACAC,EAHW,EAGXA,SAHW,OAKP,kBAAC,IAAD,CACIC,OAAQH,EACRI,SAAO,EACPH,KAAMA,GAELC,I,smBCZN,IAAMG,GAAoB,sCAAG,WAAOC,EAAQC,EAAa7C,GAA5B,iBAAAI,EAAA,4DAChCJ,GAAc,GACT8C,IAASC,KAAKC,QACjBF,IAASG,cAAcC,EAAYC,gBAGjCC,EAAMN,IAASO,UAAUD,MAAME,MAAM,cAAgBC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,KAN/G,SAOTN,EAAIO,IAAIC,GAAUhB,EAAOiB,SAPhB,cAO1BC,EAP0B,YAShCjB,EATgC,qBAU3BD,EAV2B,UAWhBkB,EAASV,IAAIW,iBAXG,0BAW9BF,OAX8B,yCASpB1D,QAToB,gBAahCH,GAAc,GAbkB,0CAAH,0DAgB3B4D,GAAY,SAAAI,GAKd,IAJA,IAAIC,EAAaC,KAAKF,EAAQG,MAAM,KAAK,IACrCC,EAAK,IAAIC,YAAYJ,EAAWjB,QAChCsB,EAAK,IAAIC,WAAWH,GAEfI,EAAI,EAAGA,EAAIP,EAAWjB,OAAQwB,IACnCF,EAAGE,GAAKP,EAAWQ,WAAWD,GAElC,OAAO,IAAIE,KAAK,CAACN,GAAK,CAAEO,KAAM,gBAGpBC,GAAe,SAACC,EAAOjC,EAAQkC,GACzC,GAAID,EAAME,OAASF,EAAME,MAAM,GAAI,CAC/B,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,OAAS,kBAAMJ,EAAe,GAAD,GAC/BlC,EAD+B,CAElCiB,OAAQmB,EAAOzE,WAEjByE,EAAOG,cAAcN,EAAME,MAAM,M,ipBCzB1B,mBAIR,IAHL3C,EAGI,EAHJA,MACAgD,EAEI,EAFJA,SACA7D,EACI,EADJA,iBACI,EACsC8D,IAAM5F,SAAS,IAAI6F,KAAK,wBAD9D,mBACKC,EADL,KACmBC,EADnB,OAEuDH,IAAM5F,WAF7D,mBAEMgG,EAFN,KAE4BC,EAF5B,KAGF,OACE,kBAACC,GAAA,EAAD,CAAMC,cAAY,GAChB,kBAACC,GAAA,EAAD,CACEC,MAAM,OACNC,YAAU,EACVC,QAAQ,uBACRC,WAAW,sCAEX,kBAACC,GAAA,EAAD,CACEC,MAAO/D,EAAMhB,KACb2E,YAAU,EACVpB,KAAK,OACLyB,GAAG,uBACHC,mBAAiB,8BACjBjF,KAAK,uBACLkF,SAAU,SAAAH,GAAK,OAAIf,EAAS,MACvBhD,EADsB,CAEzBhB,KAAM+E,SAIZ,kBAACN,GAAA,EAAD,CAAWC,MAAM,OAAOC,YAAU,EAACC,QAAQ,yBAC3C,kBAACO,GAAA,EAAD,CAAyBC,MAAOC,MAC9B,kBAAC,KAAD,CACEC,gBAAc,EACdC,QAAQ,SACRC,OAAO,aACPC,OAAO,SACPT,GAAG,qBACHN,MAAM,qBACNK,MAAOZ,EACPe,SAAU,SAAAQ,GACRtB,EAAgBsB,GAChB1B,EAAS,MACJhD,EADG,CAEN2E,UAAWD,EAAKE,mBAGpBC,oBAAqB,CACnB,aAAc,mBAKpB,kBAACpB,GAAA,EAAD,CAAWC,MAAM,eAAeE,QAAQ,yBACtC,kBAACkB,GAAA,EAAD,CACEf,MAAOV,EACPa,SAAU,SAAAH,GACRf,EAAS,MACJhD,EADG,CAEN+E,eAAgBhB,KAElBT,EAAwBS,IAE1BC,GAAG,uBACHhF,KAAK,yBAEJG,EAAiB5B,KAAKyH,IAAI,SAACC,EAAQC,GAAT,OACzB,kBAACC,GAAA,EAAD,CAAkBC,WAAYH,EAAOI,SAAUC,IAAKJ,EAAOnB,MAAOkB,EAAOM,GAAI7B,MAAOuB,EAAOO,WAIjG,kBAAC/B,GAAA,EAAD,CAAWC,MAAM,cAAcE,QAAQ,uBACrC,kBAAC6B,GAAA,EAAD,CACE1B,MAAO/D,EAAM0F,YACbxB,SAAU,SAAAH,GAAK,OAAIf,EAAS,MACvBhD,EADsB,CAEzB0F,YAAa3B,MAEf/E,KAAK,sBACLgF,GAAG,2BClFA,eAQT,EAPJ2B,YAOI,EANJC,iBAMK,IALLhI,EAKI,EALJA,cACAiI,EAII,EAJJA,kBACAC,EAGI,EAHJA,kBACA3G,EAEI,EAFJA,iBACA4G,EACI,EADJA,WACI,EACsB1I,mBAAS,CACjC2B,KAAM,GACNyC,OAAQ,GACRiE,YAAa,GACbf,UAAW,GACXqB,WAAW,IAAI9C,MAAO0B,eACtBG,eAAgB,KAPd,mBACG/E,EADH,KACUgD,EADV,KAqBAiD,EAAQ,CACZ,CAAEjH,KAAM,gBAAiBkH,UAVvB,2BAAQC,UAAU,eACd,2BAAOnC,GAAG,cAAcmC,UAAU,cAAc5D,KAAK,OAAQ2B,SAAW,SAAAkC,GACpE5D,GAAa4D,EAAKC,OAAQrG,EAAOgD,MAGrC,yBAAKsD,IAAI,eAAeC,IAAKvG,EAAMyB,OAAOb,OAAS,EAAIZ,EAAMyB,OAAS,uEAAwE0E,UAAU,kBAM9J,CACInH,KAAM,aACNkH,UACA,kBAAC,GAAD,CACElG,MAAOA,EACPgD,SAAUA,EACV7D,iBAAkBA,IAEpBqH,eAAgB,WAIpB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,OAAQd,EACRe,QAAS,kBAAMd,GAAkB,IACjCe,MAAM,YACNnB,YAAY,6CACZO,MAAOA,EACPa,OAAQ,WACH9G,EAAMhB,KAAK4B,OAAS,GAChBZ,EAAM+E,eAAenE,OAAS,GAC9BZ,EAAM2E,UAAU/D,OAAS,GACzBZ,EAAM0F,YAAY9E,OAAS,GAC3BZ,EAAMyB,OAAOb,OAAS,IAEzBL,GAAqBP,EAAO+F,EAAYnI,GACxCkI,GAAkB,S,6HC/C1BiB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,GAENC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEb9F,OAAQ,CACNsG,gBAAiBC,KAAI,SAIV,eAIP,EAHJC,KAGI,EAFJC,eAEK,IADLlI,EACI,EADJA,MAEImI,EAAUpB,KADV,EAE0B9D,IAAM5F,UAAS,GAFzC,6BAQN,OACE,kBAAC,KAAD,CAAM8I,UAAWgC,EAAQjB,MACvB,kBAACkB,GAAA,EAAD,CACE3G,OACE,kBAAC4G,GAAA,EAAD,CAAQC,aAAW,SAASnC,UAAWgC,EAAQ1G,QAC5C,yBAAK6E,IAAI,eAAeC,IAAKvG,EAAMuI,aAAaF,OAAQlC,UAAU,kBAGvEjI,OACE,kBAACsK,GAAA,EAAD,CAAYF,aAAW,YACrB,kBAAC,KAAD,OAGJzB,MAAO7G,EAAMuI,aAAa/C,KAC1BiD,UAAWzI,EAAM0I,YAEnB,kBAACC,GAAA,EAAD,CACExC,UAAWgC,EAAQhB,MACnByB,MAAO5I,EAAMqI,OACbxB,MAAM,gBAER,kBAACgC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYvE,QAAQ,QAAQwE,MAAM,gBAAgB7C,UAAU,KACzDlG,EAAMgJ,aAET,6BACA,kBAACF,GAAA,EAAD,CAAY3C,UAAU,sBAAsB5B,QAAQ,QAAQwE,MAAM,gBAAgB7C,UAAU,KAA5F,eACelG,EAAMiJ,cC3BdC,GA1CD,SAAC,GAQR,IAPLhB,EAOI,EAPJA,eACAD,EAMI,EANJA,KACApC,EAKI,EALJA,kBACAC,EAII,EAJJA,kBACA3G,EAGI,EAHJA,iBACAW,EAEI,EAFJA,UACAiG,EACI,EADJA,WACI,EACgC1I,oBAAS,GADzC,mBACGM,EADH,KACeC,EADf,KAGJ,OACE,kBAAC,EAAD,CACEsC,UAAWJ,EAAUnC,YAAcA,GAAcwB,EAAiBxB,YAAcoI,EAAWpI,WAC3FwC,KAAK,qBAEL,kBAACgJ,EAAA,EAAD,CAAa5E,QAAS6E,IAAoBC,OACxC,kBAACC,EAAA,EAAD,CAAMnD,UAAU,WACd,kBAACoD,EAAA,EAAD,KACCzJ,EAAUvC,KAAKyH,IAAI,SAAChF,EAAOsF,GAAR,OAChB,kBAAC,GAAD,CACEA,IAAKA,EACL4C,eAAgBA,EAChBD,KAAMA,EACNjI,MAAOA,MAGb,kBAAC,GAAD,CACI2F,YAAa,YACbE,kBAAmBA,EACnBjI,cAAeA,EACfkI,kBAAmBA,EACnB3G,iBAAkBA,EAClB4G,WAAYA,SCnCX,eAKR,IAJHmC,EAIE,EAJFA,eACArC,EAGE,EAHFA,kBACAC,EAEE,EAFFA,kBACAmC,EACE,EADFA,KAEMnI,EAAY5C,EAAO,CACrBgB,OAAQ,kBAAMsL,EAAS1J,UPdHV,yCOepB9B,aAAc,GACde,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEGzK,EAAmBjC,EAAO,CAC5BgB,OAAQ,kBAAM2L,EAAgB1K,iBAAiBc,IAC/C3C,aAAc,GACde,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEG7J,EAAY7C,EAAO,CACrBgB,OAAQ,SAAA8B,GAAK,OAAIwJ,EAASzJ,UP1BNX,uCO0B8BY,IAClD1C,aAAc,GACdG,OAAO,EACPW,UAAW,SAAA4B,GACNF,EAAUtC,QAAS,CAACwC,GAAQ8J,OAAOhK,EAAUvC,OAC7CmM,IAAMK,QAAQ,SAAU/J,EAAMwF,KAAK,4BAExCnH,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEH,OACI,kBAAC,GAAD,CACI1B,eAAgBA,EAChBD,KAAMA,EACNpC,kBAAmBA,EACnBC,kBAAmBA,EACnBhG,UAAWA,EACXX,iBAAkBA,EAClB4G,WAAYhG,K,qkBCrCT,mBAGR,IAFLT,EAEI,EAFJA,aACA0K,EACI,EADJA,gBAYE,OACE,kBAACzG,GAAA,EAAD,CAAMC,cAAY,GAChB,kBAACC,GAAA,EAAD,CACEC,MAAM,OACNC,YAAU,EACVC,QAAQ,uBACRC,WAAW,sCAEX,kBAACC,GAAA,EAAD,CACEC,MAAOzE,EAAaN,KACpB2E,YAAU,EACVpB,KAAK,OACLyB,GAAG,uBACHC,mBAAiB,8BACjBjF,KAAK,uBACLkF,SAAU,SAAAH,GAAK,OAAIiG,EAAgB,MAC9B1K,EAD6B,CAEhCN,KAAM+E,SAIZ,kBAACN,GAAA,EAAD,CAAWC,MAAM,QAAQC,YAAU,EAACC,QAAQ,yBAC1C,kBAACE,GAAA,EAAD,CACEC,MAAOzE,EAAaL,MACpBiF,SAAU,SAAAH,GAAK,OAAIiG,EAAgB,MAC9B1K,EAD6B,CAEhCL,MAAO8E,MAETJ,YAAU,EACVpB,KAAK,QACLyB,GAAG,wBACHhF,KAAK,2BAGT,kBAACyE,GAAA,EAAD,CAAWC,MAAM,eAAeE,QAAQ,yBACtC,kBAACkB,GAAA,EAAD,CACEf,MAAOzE,EAAa2K,YACpB/F,SAAU,SAAAH,GAAK,OAAIiG,EAAgB,MAC9B1K,EAD6B,CAEhC2K,YAAalG,MAEfC,GAAG,uBACHhF,KAAK,yBApDG,CACd,CAAE+E,MAAO,sBAAuBL,MAAO,sBAAuB2B,UAAU,GACxE,CAAEtB,MAAO,QAASL,MAAO,QAAS2B,UAAU,GAC5C,CAAEtB,MAAO,QAASL,MAAO,QAAS2B,UAAU,GAC5C,CAAEtB,MAAO,UAAWL,MAAO,UAAW2B,UAAU,GAChD,CAAEtB,MAAO,aAAcL,MAAO,aAAc2B,UAAU,GACtD,CAAEtB,MAAO,gBAAiBL,MAAO,gBAAiB2B,UAAU,GAC5D,CAAEtB,MAAO,UAAWL,MAAO,UAAW2B,UAAU,IA+CjCL,IAAI,SAACC,EAAQC,GAAT,OACX,kBAACC,GAAA,EAAD,CAAkBC,WAAYH,EAAOI,SAAUC,IAAKJ,EAAOnB,MAAOkB,EAAOlB,MAAOL,MAAOuB,EAAOvB,YAIpG,kBAACD,GAAA,EAAD,CAAWC,MAAM,cAAcE,QAAQ,uBACrC,kBAAC6B,GAAA,EAAD,CACE1B,MAAOzE,EAAaoG,YACpBxB,SAAU,SAAAH,GAAK,OAAIiG,EAAgB,MAC9B1K,EAD6B,CAEhCoG,YAAa3B,MAEf/E,KAAK,sBACLgF,GAAG,2B,4RCzER,IAAMkG,GAAb,sLACY,IAAD,EACmCC,KAAKC,MAAvC9K,EADD,EACCA,aAAc0K,EADf,EACeA,gBAEhBK,EAAS,SAACC,EAAKC,EAAM7G,GAAZ,OACb,kBAAC,UAAD,CACI8G,QAAS,SAAAC,GAAK,OAAIT,E,uVAAgB,IAC7B1K,EAD4B,CAE/BoL,SAAUhH,MAEZmD,MAAOnD,EACPiH,SAAU,CAAEL,IAAKA,EAAKM,IAAKL,MAIjC,OACE,kBAAC,OAAD,CACEM,OAAQV,KAAKC,MAAMS,OACnBC,KAAM,GACNC,cAAe,CAAET,KAAM,UAAWM,IAAK,YAEtCP,GAAQ,UAAW,UAAW,gBAC9BA,GAAQ,UAAW,UAAW,eAC9BA,GAAQ,UAAW,UAAW,YAC9BA,GAAQ,UAAW,UAAW,cAC9BA,GAAQ,SAAW,UAAW,YAC9BA,GAAQ,SAAW,UAAW,aAC9BA,GAAQ,UAAW,UAAW,mBA3BvC,GAAkCW,aAiCnBC,+BAAiB,CAC9BC,OAAQpK,EAAYqK,YADPF,CAEZf,IClCY,eAOT,EANFvE,YAME,EALFC,iBAKG,IAJHhI,EAIE,EAJFA,cACAwN,EAGE,EAHFA,yBACAC,EAEE,EAFFA,0BACAC,EACE,EADFA,kBACE,EACwCjO,mBAAS,CACjDoE,OAAO,GACPzC,KAAK,GACLC,MAAM,GACNgL,YAAY,GACZvE,YAAY,GACZgF,SAAS,KAPT,mBACMpL,EADN,KACoB0K,EADpB,KAmBI/D,EAAQ,CACZ,CAAEjH,KAAM,gBAAiBkH,UAVvB,2BAAQC,UAAU,eACd,2BAAOnC,GAAG,cAAcmC,UAAU,cAAc5D,KAAK,OAAQ2B,SAAW,SAAAkC,GACpE5D,GAAa4D,EAAKC,OAAQ/G,EAAc0K,MAG5C,yBAAK1D,IAAI,sBAAsBC,IAAKjH,EAAamC,OAAOb,OAAS,EAAItB,EAAamC,OAAS,uEAAwE0E,UAAU,kBAMnL,CACEnH,KAAM,oBACNkH,UAAW,kBAAC,GAAD,CAAkB5G,aAAcA,EAAc0K,gBAAiBA,KAE5E,CAAEhL,KAAK,aAAD,OAAeM,EAAaoL,UAAYxE,UAAW,kBAAC,GAAD,CAAK5G,aAAcA,EAAc0K,gBAAiBA,IAAsBxD,eAAgB,WAInJ,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,OAAQyE,EACRxE,QAAS,kBAAMyE,GAA0B,IACzCxE,MAAM,mBACNnB,YAAY,oDACZO,MAAOA,EACPa,OAAQ,WACCxH,EAAamC,OAAOb,OAAS,GAC7BtB,EAAaoG,YAAY9E,OAAS,GAClCtB,EAAaL,MAAM2B,OAAS,GAC5BtB,EAAa2K,YAAYrJ,OAAS,GAClCtB,EAAaN,KAAK4B,OAAS,GAC3BtB,EAAaoL,SAAS9J,OAAS,IAElCL,GAAqBjB,EAAcgM,EAAmB1N,GACtDyN,GAA0B,S,+ECtD7BnB,I,OAAb,sLAEI,IASQQ,EAAcP,KAAKC,MAAnBM,SACFa,EAVwB,SAACb,GAC3B,MAAqB,gBAAZA,EAAmC,CAACJ,KAAM,UAAWM,IAAK,WAC9C,eAAZF,EAAmC,CAACJ,KAAM,UAAWM,IAAK,WAC9C,YAAZF,EAAgC,CAACJ,KAAM,UAAWM,IAAK,WAC3C,cAAZF,EAAkC,CAACJ,KAAM,UAAWM,IAAK,WAC7C,YAAZF,EAAgC,CAACJ,KAAM,SAAWM,IAAK,WAC3C,aAAZF,EAAiC,CAACJ,KAAM,SAAWM,IAAK,WAC5C,cAAZF,EAAkC,CAACJ,KAAM,UAAWM,IAAK,gBAA7D,EAGkBY,CAAsBd,GAEjD,OACE,kBAAC,OAAD,CACEvE,UAAU,OACV0E,OAAQV,KAAKC,MAAMS,OACnBC,KAAM,GACNC,cAAe,CAAET,IAAKiB,EAAmBjB,IAAKM,IAAKW,EAAmBX,MAEtE,kBAAC,UAAD,CACE/D,MAAO6D,EACPC,SAAU,CAAEL,IAAKiB,EAAmBjB,IAAKM,IAAKW,EAAmBX,YAvB3E,GAAkCI,cA8BnBC,+BAAiB,CAC9BC,OAAQpK,EAAYqK,YADPF,CAEZf,ICjBGnD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,gBAAiB,QAEnBC,MAAO,CACLC,OAAQ,QACRqE,MAAO,QACPC,QAAS,aACT,kBAAmB,SAErBpE,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYR,EAAMS,YAAYC,OAAO,YAAa,CAChDC,SAAUX,EAAMS,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEb9F,OAAQ,CACNsG,gBAAiBC,KAAI,SAIV,eAKR,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,eACA5I,EAEI,EAFJA,aACAqM,EACI,EADJA,gBAEMxD,EAAUpB,KADZ,EAE4B9D,IAAM5F,UAAS,GAF3C,mBAEGuO,EAFH,KAEaC,EAFb,KAQJ,OACE,kBAACC,GAAA,EAAD,KACA,kBAAC,KAAD,CAAM3F,UAAWgC,EAAQjB,MACvB,kBAAC6E,GAAA,EAAD,KACE,kBAACpD,GAAA,EAAD,CACExC,UAAWgC,EAAQhB,MACnByB,MAAOtJ,EAAa+I,SAEtB,kBAACQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYkD,cAAY,EAACzH,QAAQ,KAAK2B,UAAU,MAC7C5G,EAAakG,MAEhB,kBAACsD,GAAA,EAAD,CAAYvE,QAAQ,QAAQwE,MAAM,gBAAgB7C,UAAU,KACzD5G,EAAa0J,eAIpB,kBAACiD,GAAA,EAAD,CAAaC,gBAAc,GACzB,kBAACC,GAAA,EAAD,CACEhG,UAAW,mBACXf,YAAa8C,EACb3D,QAAQ,OACRiG,QAAS,WACmE,IAAxElL,EAAa8M,cAAcC,OAAO,SAAAC,GAAC,OAAIA,EAAEC,SAAWtE,EAAK1C,KAAI3E,QAC1D+K,EAAgB5N,QAAQ,CAACgH,eAAgBzF,EAAaiG,GAAIiH,OAAQvE,EAAK1C,OAG3EjG,EAAa8M,cAAcxL,OAAQ,kBAExC,kBAAC4H,GAAA,EAAD,CACErC,UAAWsG,aAAKtE,EAAQb,OAAT,eACZa,EAAQL,WAAa8D,IAExBpB,QArCR,WACEqB,GAAaD,IAqCPc,gBAAed,EACftD,aAAW,aAEX,kBAAC,KAAD,QAGJ,kBAACqE,GAAA,EAAD,CAAUC,GAAIhB,EAAUiB,QAAQ,OAAOC,eAAa,GAClD,kBAACjE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAY3C,UAAU,sBAAsB6F,cAAY,EAACzH,QAAQ,KAAK2B,UAAU,MAC7E5G,EAAayN,aAEhB,kBAACjE,GAAA,EAAD,CAAY3C,UAAU,OAAO6G,WAAS,GACpC,kBAAC,GAAD,CAAYtC,SAAUpL,EAAa2N,YAErC,kBAACnE,GAAA,EAAD,CAAY3C,UAAU,sBAAsB5B,QAAQ,QAAQwE,MAAM,gBAAgB7C,UAAU,KACzF5G,EAAa4N,YClGX,eAQR,IAPLhF,EAOI,EAPJA,eACAD,EAMI,EANJA,KACAmD,EAKI,EALJA,yBACAC,EAII,EAJJA,0BACAlM,EAGI,EAHJA,iBACAmM,EAEI,EAFJA,kBACAK,EACI,EADJA,gBACI,EACgCtO,oBAAS,GADzC,mBACGM,EADH,KACeC,EADf,KAGJ,OACE,kBAAC,EAAD,CACEsC,UAAWf,EAAiBxB,YAAcA,GAAc2N,EAAkB3N,WAC1EwC,KAAK,4BAEL,kBAACgJ,EAAA,EAAD,CAAa5E,QAAS6E,IAAoBC,OACxC,kBAACC,EAAA,EAAD,CAAMnD,UAAU,WACd,kBAACoD,EAAA,EAAD,KACGpK,EAAiB5B,KAAKyH,IAAI,SAAC1F,EAAcgG,GAAf,OACzB,kBAAC,GAAD,CAAkBA,IAAKA,EACrB4C,eAAgBA,EAChBD,KAAMA,EACN3I,aAAcA,EACdqM,gBAAiBA,MAGrB,kBAAC,GAAD,CACEhG,YAAa,mBACbyF,yBAA0BA,EAC1BC,0BAA2BA,EAC3BzN,cAAeA,EACf0N,kBAAmBA,S,6NClClB,I,GAAA,eAKR,IAJHpD,EAIE,EAJFA,eACAkD,EAGE,EAHFA,yBACAC,EAEE,EAFFA,0BACApD,EACE,EADFA,KAEM9I,EAAmBjC,EAAO,CAC5BgB,OAAQ,kBAAM2L,EAAgB1K,iBAAiBc,IAC/C3C,aAAc,GACde,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEGvK,EAAmBnC,EAAO,CAC5BgB,OAAQ,SAAAoB,GAAY,OAAIuK,EAAgBxK,iBAAiBY,EAAqBX,IAC9EhC,aAAc,GACdG,OAAO,EACPW,UAAW,SAAAkB,GACNH,EAAiB3B,QAAS,CAAC8B,GAAewK,OAAO3K,EAAiB5B,OAClEmM,IAAMK,QAAQ,gBAAgBzK,EAAakG,KAAK,4BAErDnH,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEG+B,EAAkBzO,EAAO,CAC3BgB,OAAQ,SAAA2B,GAAY,OAAIgK,EAAgBjK,iBAAiBK,EAAqBJ,IAC9EvC,aAAc,GACdG,OAAO,EACPW,UAAW,SAAAyB,GACPV,EAAiB3B,QAAQ2B,EAAiB5B,KAAKyH,IAAI,SAAAmI,GAAC,OAChDA,EAAE5H,IAAM1F,EAAauN,e,uVAArB,IACOD,EADP,CAEIf,cAAee,EAAEf,cAActC,OAAOjK,KACtCsN,KAERzD,IAAMK,QAAQ,6BAElB1L,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEH,OACI,kBAAC,GAAD,CACI1B,eAAgBA,EAChBD,KAAMA,EACNmD,yBAA0BA,EAC1BC,0BAA2BA,EAC3BlM,iBAAkBA,EAClBmM,kBAAmBjM,EACnBsM,gBAAiBA,K,wCC9Cd0B,IATI,qBACdC,KAAmBC,GAAKC,EAAQ,MADlB,eAEdF,KAAmBG,GAAKD,EAAQ,MAFlB,eAGdF,KAAmBI,KAAOF,EAAQ,MAHpB,eAIdF,KAAmBK,GAAKH,EAAQ,MAJlB,eAKdF,KAAmBM,KAAOJ,EAAQ,MALpB,eAMdF,KAAmBjB,OAASmB,EAAQ,MANtB,I,UC+DJK,GAxDW,SAAC,GAEpB,IADLC,EACI,EADJA,aACI,EACsBzQ,mBAAS,IAD/B,mBACK2B,EADL,KACW+O,EADX,OAEwB1Q,mBAAS,IAFjC,mBAEK4B,EAFL,KAEY+O,EAFZ,OAG8B3Q,mBAAS,IAHvC,mBAGKqB,EAHL,KAGeuP,EAHf,KAKF,OACE,kBAAC1K,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CACEC,MAAM,OACNC,YAAU,EACVC,QAAQ,OACRC,WAAW,iCAEX,kBAACC,GAAA,EAAD,CACEC,MAAO/E,EACP2E,YAAU,EACVpB,KAAK,OACLyB,GAAG,OACHC,mBAAiB,cACjBjF,KAAK,OACLkF,SAAU,SAACH,GAAD,OAAWgK,EAAQhK,OAGjC,kBAACN,GAAA,EAAD,CAAWC,MAAM,QAAQC,YAAU,EAACC,QAAQ,SAC1C,kBAACE,GAAA,EAAD,CACEC,MAAO9E,EACPiF,SAAU,SAACH,GAAD,OAAWiK,EAASjK,IAC9BJ,YAAU,EACVpB,KAAK,QACLyB,GAAG,QACHhF,KAAK,WAGT,kBAACyE,GAAA,EAAD,CAAWC,MAAM,WAAWC,YAAU,EAACC,QAAQ,YAC7C,kBAACE,GAAA,EAAD,CACEC,MAAOrF,EACPwF,SAAU,SAACH,GAAD,OAAWkK,EAAYlK,IACjCJ,YAAU,EACVpB,KAAK,WACLyB,GAAG,WACHhF,KAAK,cAGT,kBAACmN,GAAA,EAAD,CACI5H,QAASuJ,EAAanQ,WAAa,OAAS,UAC5CuQ,KAAMJ,EAAanQ,YAAc,kBAACwQ,GAAA,EAAD,CAASC,UAAU,SAAS7J,QAAQ,YACrEa,YAAapG,IAASC,IAAUP,EAChC8L,QAAS,kBAAMsD,EAAa/P,QAAQ,CAAC,KAAQiB,EAAM,MAASC,EAAO,SAAYP,MAJnF,YCJO2P,GAzCU,SAAC,GAGnB,IAFLC,EAEI,EAFJA,YAEI,KADJC,kBAE4BlR,mBAAS,KADjC,mBACK4B,EADL,KACY+O,EADZ,OAE8B3Q,mBAAS,IAFvC,mBAEKqB,EAFL,KAEeuP,EAFf,KAIF,OACE,kBAAC1K,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,CAAWC,MAAM,QAAQC,YAAU,EAACC,QAAQ,SAC1C,kBAACE,GAAA,EAAD,CACEC,MAAO9E,EACPiF,SAAU,SAACH,GAAD,OAAWiK,EAASjK,IAC9BJ,YAAU,EACVpB,KAAK,QACLyB,GAAG,QACHhF,KAAK,WAGT,kBAACyE,GAAA,EAAD,CAAWC,MAAM,WAAWC,YAAU,EAACC,QAAQ,YAC7C,kBAACE,GAAA,EAAD,CACEC,MAAOrF,EACPwF,SAAU,SAACH,GAAD,OAAWkK,EAAYlK,IACjCJ,YAAU,EACVpB,KAAK,WACLyB,GAAG,WACHhF,KAAK,cAIT,kBAACmN,GAAA,EAAD,CACI5H,QAAS+J,EAAY3Q,WAAa,OAAS,UAC3CuQ,KAAMI,EAAY3Q,YAAc,kBAACwQ,GAAA,EAAD,CAASC,UAAU,SAAS7J,QAAQ,YACpEa,YAAanG,IAAUP,EACvB8L,QAAS,kBAAM8D,EAAYvQ,QAAQ,CAAC,SAAYkB,EAAO,SAAYP,MAJvE,WCuBO8P,GAhDO,SAAC,GAKhB,IAJLtG,EAII,EAJJA,eACAD,EAGI,EAHJA,KACAqG,EAEI,EAFJA,YACAR,EACI,EADJA,aACI,EACkCzQ,oBAAS,GAD3C,mBACGoR,EADH,KACgBC,EADhB,KAGEC,EACF,kBAACC,GAAA,EAAD,KACGH,EAAc,mBAAqB,2BACpC,uBAAGI,KAAK,IAAIrE,QAAU,kBAAMkE,GAAgBD,KACzCA,EAAc,UAAY,UAUnC,OALmBH,EAAY3Q,YACVmQ,EAAanQ,YACQ,OAArB2Q,EAAY/Q,MACiB,IAA5B+Q,EAAY/Q,KAAKqD,QAA6C,IAA7BkN,EAAavQ,KAAKqD,OAIjE,kBAACkO,GAAA,EAAD,CACEC,mBAAmB,SACnBC,YAAaC,IACbC,YAAY,WACZC,iBAAkB9B,GAClB+B,iBAAiB,SACjBC,YAAY,kJAEZC,WAAYb,EAAc,yBAA2B,oBACrDc,cAAc,oCACdZ,wBAAyBA,GAE1BF,EACG,kBAAC,GAAD,CAAWH,YAAaA,IACxB,kBAAC,GAAD,CAAYR,aAAcA,KAGhC,kBAAC,GAAD,CACE7F,KAAMA,EACNC,eAAgBA,KC/CX,eACR,sBACqB7K,qBADtB,mBACK4K,EADL,KACWuH,EADX,OAE0CnS,oBAAS,GAFnD,mBAEK6K,EAFL,KAEqBqG,EAFrB,KAIIhQ,EAAQrB,EAAO,CACjBgB,OAAQ,SAAAuR,GAAY,OAAIC,EAASnR,MnBfba,uCmBeiCqQ,EAAahR,SAAUgR,EAAa/Q,WACzFpB,aAAc,GACdG,OAAO,EACPW,UAAW,SAAA6J,GACP,GAAU,OAAPA,EAAa,MAAM0H,MACtBjG,IAAMK,QAAQ,WAAW9B,EAAKzC,MAC9BgK,EAAQvH,GACRsG,GAAkB,IAEtBlQ,QAAS,kBAAMqL,IAAMC,MAAM,6BAC5B,IAEG5K,EAAS7B,EAAO,CAClBgB,OAAQ,SAAA0R,GAAa,OAAIF,EAAS3Q,OnB5BdK,uCmB4BmCwQ,EAAc5Q,KAAM4Q,EAAc3Q,MAAO2Q,EAAclR,WAC9GpB,aAAc,GACdG,OAAO,EACPW,UAAW,SAAAyR,GACP,GAAsB,MAAnBA,EAAW5H,KAAc,MAAM0H,MAAME,EAAWjG,SACnDF,IAAMK,QAAQ,2BAElB1L,QAAS,SAACoL,GAAD,OAAOC,IAAMC,MAAMF,EAAEG,WAC/B,IAEH,OACI,kBAAC,GAAD,CACI1B,eAAgBA,EAChBD,KAAMA,EACNqG,YAAa/P,EACbuP,aAAc/O,KC7BX,eAGR,IAFLkJ,EAEI,EAFJA,KACAC,EACI,EADJA,eACI,EAC6B7K,oBAAS,GADtC,mBACGyS,EADH,KACcC,EADd,OAEmE1S,oBAAS,GAF5E,mBAEG2S,EAFH,KAEiCC,EAFjC,OAGiD5S,oBAAS,GAH1D,mBAGG6S,EAHH,KAGwBC,EAHxB,OAI2C9S,oBAAS,GAJpD,mBAIGwI,EAJH,KAIsBC,EAJtB,OAK0DzI,oBAAS,GALnE,mBAKG+N,EALH,KAK6BC,EAL7B,OAMsChO,mBAAS,CAAE+S,QAAQ,IANzD,mBAMGC,EANH,KAMkBC,EANlB,KAQEC,EACJ,uBAAGpK,UAAU,eAAe0I,KAAK,KAC/B,yBAAKtI,IAAK0I,IAAU3I,IAAI,gCAItBkK,EACJ,kBAACC,EAAA,EAAD,CACE9F,SAAU+F,IAAiBC,MAC3BC,OAAQ,kBAACC,EAAA,EAAD,CAAgBC,SAAU,kBAAMb,GAAgCD,KAAhE,iBACRrJ,OAAQqJ,EACRe,SAAO,EACPC,cAAe,CACb,kBAACC,EAAA,EAAD,CAAc3L,IAAI,MAAMF,YAAa8C,EAAgBsC,QAAS,kBAAMa,GAA0B,KAC5F,kBAAC,IAAD,MADF,oBAMA6F,EACJ,kBAACT,EAAA,EAAD,CACE9F,SAAU+F,IAAiBC,MAC3BC,OAAQ,kBAACC,EAAA,EAAD,CAAgBC,SAAU,kBAAMX,GAAuBD,KAAvD,UACRvJ,OAAQuJ,EACRa,SAAO,EACPC,cAAe,CACb,kBAACC,EAAA,EAAD,CAAc3L,IAAI,MAAMF,YAAa8C,EAAgBsC,QAAS,kBAAM1E,GAAkB,KACpF,kBAAC,IAAD,MADF,aAMAqL,EACJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASlL,UAAU,aAAa5B,QAAS+M,IAAYC,YACnD,kBAACC,EAAA,EAAD,CACEhH,QAAS,kBAAM8F,EAAiB,CAAEF,QAAQ,KAC1CqB,SAAUpB,EAAcD,SAAU,GAClCc,GAGF,kBAACM,EAAA,EAAD,CACEhH,QAAS,kBAAM8F,EAAiB,CAAEoB,eAAe,KACjDD,SAAUpB,EAAcqB,gBAAiB,GAF3C,IAGGlB,GAGFtI,GACC,kBAACsJ,EAAA,EAAD,KACGvJ,EAAKzC,KADR,IACc,kBAAC,IAAD,OAGhB,kBAACgM,EAAA,EAAD,CAAShH,QAAS,kBAAM8F,EAAiB,CAAE/R,OAAO,MAAlD,UACQ,kBAAC,IAAD,SAMRoT,EACJ,kBAACC,EAAA,EAAD,CACEC,KAAMtB,EACNuB,OAAQX,EACRY,eAAa,EACbjC,UAAWA,EACXC,YAAa,kBAAMA,GAAaD,MAIpC,OACEO,EAAc9R,MACV,kBAAC,GAAD,MACA,kBAACyT,EAAA,EAAD,CAAMC,OAAQN,GACbtB,EAAcD,QACb,kBAAC,GAAD,CACEvK,kBAAmBA,EACnBC,kBAAmBA,EACnBoC,eAAgBA,EAChBD,KAAMA,IAGToI,EAAcqB,eACb,kBAAC,GAAD,CACEtG,yBAA0BA,EAC1BC,0BAA2BA,EAC3BnD,eAAgBA,EAChBD,KAAMA,MCnGHiK,GARG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIjM,UAAWkM,OCI3BC,GAAcC,QACW,cAA7BC,OAAO7H,SAAS8H,UAEe,UAA7BD,OAAO7H,SAAS8H,UAEhBD,OAAO7H,SAAS8H,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT/T,KAAK,SAAAoU,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOxU,WACnBwU,EAAOxU,UAAU4U,UAO5BU,MAAM,SAAA/J,GACL4J,QAAQ5J,MAAM,4CAA6CA,KCpFjEgK,IAASC,OACR,6BACC,kBAAC,GAAD,MACA,kBAAC,IAAD,OAEDC,SAASC,eAAe,SDKlB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwBzB,OAAO7H,SAASmE,MACpDoF,SAAW1B,OAAO7H,SAASuJ,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP3B,KAgEV,SAAiCM,EAAOC,GAEtCjU,MAAMgU,GACH/T,KAAK,SAAAC,GAEJ,IAAMsV,EAActV,EAASc,QAAQyU,IAAI,gBAEnB,MAApBvV,EAASwV,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM3V,KAAK,SAAAoU,GACjCA,EAAawB,aAAa5V,KAAK,WAC7B2T,OAAO7H,SAAS+J,aAKpB/B,GAAgBC,EAAOC,KAG1Bc,MAAM,WACLH,QAAQC,IACN,mEArFAkB,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM3V,KAAK,WACjC2U,QAAQC,IACN,gHAMJd,GAAgBC,EAAOC,MC/B/BG,I,g2CCnBA4B,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.98cbe94a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useApi = (task, deps) => {\r\n    const [data, setData] = useState(task.initialValue);\r\n    const [inProgress, setInProgress] = useState(task.defer === false || task.condition === true);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const execute = async (params = null) => {\r\n        try {\r\n            setInProgress(true);\r\n            setIsError(false);\r\n            setData(task.initialValue);\r\n\r\n            const result = await task.action(params);\r\n\r\n            setData(result);\r\n            setInProgress(false);\r\n\r\n            task.onSuccess && task.onSuccess(result);\r\n        } catch (e) {\r\n            setIsError(true);\r\n            setInProgress(false);\r\n\r\n            task.onError && task.onError(e);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (task.defer || task.condition === false) return;\r\n\r\n        execute();\r\n    }, deps);\r\n\r\n    return {\r\n        data,\r\n        inProgress,\r\n        isError,\r\n        setData,\r\n        execute\r\n    };\r\n};\r\n\r\nexport default useApi;","export const login = (loginBaseUrl, username, password) =>\r\n    fetch(loginBaseUrl + `authenticate-user?username=${username}&password=${password}`)\r\n        .then(response => response.json());\r\n\r\nexport const signup = (loginBaseUrl,name, email, password) =>\r\n    fetch(loginBaseUrl + `user-signup?name=${name}&email=${email}&password=${password}`)\r\n        .then(response => response.json());\r\n\r\nexport const logout = (loginBaseUrl, username) =>\r\n    fetch(loginBaseUrl + `logout?username=${username}`).then(response => response);","export const getOrganizations = (baseUrl) =>\r\n    fetch(baseUrl).then(response => response.json());\r\n\r\nexport const postOrganization = async (baseUrl, organization) =>   \r\n    fetch(baseUrl+'add-organisation',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(organization),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n    }\r\n    }).then((response) => response.json())\r\n\r\nexport const postSubscription = async (baseUrl, subscription) =>   \r\n    fetch(baseUrl+'add-subscription',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(subscription),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n    }\r\n    }).then((response) => response.json())","export const getEvents = (baseUrl) =>\r\n    fetch(baseUrl).then(response => response.json());\r\n\r\nexport const postEvent = async (baseUrl, event) =>   \r\n    fetch(baseUrl+'add-event',\r\n    {\r\n        method: 'POST',\r\n        body: JSON.stringify(event),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n    }\r\n    }).then((response) => response.json())","const baseUrl = 'http://192.168.0.100:5203/api';\r\nexport const loginBaseUrl = baseUrl+'/login/';\r\nexport const organizationBaseUrl = baseUrl+'/organisation/';\r\nexport const eventBaseUrl = baseUrl+'/event/';","import './component.css'\r\n\r\nimport React from 'react';\r\n\r\nimport LoadingOverlay from 'react-loading-overlay'\r\n\r\nexport default ({\r\n    isLoading,\r\n    text, \r\n    children\r\n}) => (\r\n        <LoadingOverlay\r\n            active={isLoading}\r\n            spinner\r\n            text={text}\r\n        >\r\n            {children}\r\n        </LoadingOverlay>\r\n    )","import firebase from 'firebase';\r\n\r\nimport appsettings from '../../../package.json'\r\n\r\nexport const uploadAndGetImageUrl = async (object, onAddObject, setInProgress) => {\r\n    setInProgress(true)\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(appsettings.FirebaseConfig);\r\n    }\r\n    \r\n    var ref = firebase.storage().ref().child(\"images/COP/\" + Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15));\r\n    const snapshot = await ref.put(b64toBlob(object.avatar));\r\n\r\n    onAddObject.execute({\r\n      ...object,\r\n      avatar: await snapshot.ref.getDownloadURL()\r\n    });\r\n    setInProgress(false);\r\n  }\r\n\r\nconst b64toBlob = dataURI => {\r\n    var byteString = atob(dataURI.split(',')[1]);\r\n    var ab = new ArrayBuffer(byteString.length);\r\n    var ia = new Uint8Array(ab);\r\n\r\n    for (var i = 0; i < byteString.length; i++) {\r\n        ia[i] = byteString.charCodeAt(i);\r\n    }\r\n    return new Blob([ab], { type: 'image/jpeg' });\r\n}\r\n\r\nexport const  readImageURL = (input, object, setObjectImage) => {\r\n    if (input.files && input.files[0]) {\r\n        var reader = new FileReader();\r\n        reader.onload = () => setObjectImage({\r\n          ...object,\r\n          avatar: reader.result\r\n        })\r\n        reader.readAsDataURL(input.files[0]);\r\n    }\r\n  }\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  TextInput,\r\n  TextArea,\r\n  FormSelectOption,\r\n  FormSelect\r\n} from '@patternfly/react-core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\nexport default ({\r\n  event,\r\n  setEvent,\r\n  getOrganizations\r\n}) => {\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2019-08-18T21:11:54'));\r\n    const [ selectedOrganization, setSelectedOrganization] = React.useState();\r\n    return (\r\n      <Form isHorizontal>\r\n        <FormGroup\r\n          label=\"Name\"\r\n          isRequired\r\n          fieldId=\"horizontal-form-name\"\r\n          helperText=\"Please provide organizational name\"\r\n        >\r\n          <TextInput\r\n            value={event.name}\r\n            isRequired\r\n            type=\"text\"\r\n            id=\"horizontal-form-name\"\r\n            aria-describedby=\"horizontal-form-name-helper\"\r\n            name=\"horizontal-form-name\"\r\n            onChange={value => setEvent({\r\n              ...event, \r\n              name: value\r\n            })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Date\" isRequired fieldId=\"horizontal-form-email\">\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            disableToolbar\r\n            variant=\"inline\"\r\n            format=\"MM/dd/yyyy\"\r\n            margin=\"normal\"\r\n            id=\"date-picker-inline\"\r\n            label=\"Date picker inline\"\r\n            value={selectedDate}\r\n            onChange={date => {\r\n              setSelectedDate(date);\r\n              setEvent({\r\n                ...event, \r\n                eventDate: date.toDateString()\r\n              });\r\n            }}\r\n            KeyboardButtonProps={{\r\n              'aria-label': 'change date',\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        </FormGroup>\r\n        <FormGroup label=\"Organization\" fieldId=\"horizontal-form-title\">\r\n          <FormSelect\r\n            value={selectedOrganization}\r\n            onChange={value =>{\r\n              setEvent({\r\n                ...event, \r\n                organisationId: value,\r\n              });\r\n              setSelectedOrganization(value);\r\n            }}\r\n            id=\"horzontal-form-title\"\r\n            name=\"horizontal-form-title\"\r\n          >\r\n            {getOrganizations.data.map((option, index) => (\r\n              <FormSelectOption isDisabled={option.disabled} key={index} value={option.Id} label={option.Name} />\r\n            ))}\r\n          </FormSelect>\r\n        </FormGroup>\r\n        <FormGroup label=\"Description\" fieldId=\"horizontal-form-exp\">\r\n          <TextArea\r\n            value={event.description}\r\n            onChange={value => setEvent({\r\n              ...event, \r\n              description: value\r\n            })}\r\n            name=\"horizontal-form-exp\"\r\n            id=\"horizontal-form-exp\"\r\n          />\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n}\r\n","import './component.css'\r\n\r\nimport React, { useState } from 'react'\r\nimport { Wizard } from '@patternfly/react-core'\r\n\r\nimport { readImageURL, uploadAndGetImageUrl } from '../../../../shared/utils/images'\r\nimport EventForm from '../event-form'\r\n\r\nexport default ({\r\n  modalheader,\r\n  setWizardVisible,\r\n  setInProgress,\r\n  isAddEventVisible,\r\n  setAddEventToggle,\r\n  getOrganizations,\r\n  onAddEvent\r\n}) => {\r\n  const [event, setEvent] = useState({\r\n    name: '',\r\n    avatar: '',\r\n    description: '',\r\n    eventDate: '',\r\n    addedDate: new Date().toDateString(),\r\n    organisationId: ''\r\n  })\r\n\r\n \r\n  const uploadAvatar = (\r\n    <label  className=\"wrap button\">\r\n        <input id='mail-upload' className=\"wrap button\" type=\"file\"  onChange={ file => {\r\n            readImageURL(file.target, event, setEvent)\r\n          }}\r\n        />\r\n        <img alt='event-avatar' src={event.avatar.length > 0 ? event.avatar : 'http://www.pngall.com/wp-content/uploads/2/Upload-PNG-Image-File.png'} className=\"wrap button\" />\r\n    </label>\r\n)\r\n\r\nconst steps = [\r\n  { name: 'Upload avatar', component:  uploadAvatar },\r\n  {\r\n      name: 'Event form',\r\n      component: \r\n      <EventForm\r\n        event={event}\r\n        setEvent={setEvent}\r\n        getOrganizations={getOrganizations}\r\n      />,\r\n      nextButtonText: 'Finish'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Wizard\r\n        isOpen={isAddEventVisible}\r\n        onClose={() => setAddEventToggle(false)}\r\n        title=\"Add Event\"\r\n        description=\"Please fill in event details in each step.\"\r\n        steps={steps}\r\n        onSave={() => {\r\n          if(event.name.length > 0 \r\n              && event.organisationId.length > 0 \r\n              && event.eventDate.length > 0 \r\n              && event.description.length > 0\r\n              && event.avatar.length > 0)\r\n              {\r\n              uploadAndGetImageUrl(event, onAddEvent, setInProgress);\r\n              setAddEventToggle(false)\r\n            }\r\n          }\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","import './component.css'\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nexport default ({\r\n    user,\r\n    isUserLoggedIn,\r\n    event\r\n  }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n             <img alt='event-avatar' src={event.organisation.Avatar} className=\"event-avatar\" />\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={event.organisation.Name}\r\n        subheader={event.AddedDate}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={event.Avatar}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {event.Description}\r\n        </Typography>\r\n        <br/>\r\n        <Typography className='typography-centered' variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n          Event date: {event.EventDate}\r\n        </Typography>\r\n      </CardContent>\r\n      \r\n    </Card>\r\n  );\r\n}","import './component.css';\r\n\r\nimport React, { useState} from 'react';\r\nimport {\r\n  Page, PageSection, PageSectionVariants,\r\n  Card, CardBody,\r\n} from '@patternfly/react-core';\r\n\r\nimport Spinner from '../../../shared/components/spinner/component'\r\nimport Wizard from '../wizard/page/component'\r\nimport EventCard from '../event-card/page/component'\r\n\r\nconst Feeds = ({\r\n  isUserLoggedIn,\r\n  user,\r\n  isAddEventVisible,\r\n  setAddEventToggle,\r\n  getOrganizations,\r\n  getEvents,\r\n  onAddEvent\r\n}) => {\r\n  const [inProgress, setInProgress] = useState(false);\r\n\r\n  return (\r\n    <Spinner\r\n      isLoading={getEvents.inProgress || inProgress || getOrganizations.inProgress || onAddEvent.inProgress}\r\n      text='Loading events...'\r\n    >\r\n      <PageSection variant={PageSectionVariants.light}>\r\n        <Card className='mx-auto' >\r\n          <CardBody >\r\n          {getEvents.data.map((event, key) =>\r\n              <EventCard \r\n                key={key}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                user={user}\r\n                event={event}\r\n              />\r\n            )}\r\n          <Wizard\r\n              modalheader={'Add Event'}\r\n              isAddEventVisible={isAddEventVisible}\r\n              setInProgress={setInProgress}\r\n              setAddEventToggle={setAddEventToggle}\r\n              getOrganizations={getOrganizations}\r\n              onAddEvent={onAddEvent}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n        </PageSection>\r\n    </Spinner>\r\n  );\r\n}\r\n\r\nexport default Feeds;","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport useApi from '../../../shared/components/react-use-api'; \r\n\r\nimport { eventApi, organizationApi } from '../../../api';\r\nimport { eventBaseUrl, organizationBaseUrl } from '../../../shared/constants/api-selectors'\r\n\r\nimport Event from './component';\r\n\r\nexport default ({\r\n    isUserLoggedIn,\r\n    isAddEventVisible,\r\n    setAddEventToggle,\r\n    user\r\n}) => {\r\n    const getEvents = useApi({\r\n        action: () => eventApi.getEvents(eventBaseUrl),\r\n        initialValue: [],\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n\r\n    const getOrganizations = useApi({\r\n        action: () => organizationApi.getOrganizations(organizationBaseUrl),\r\n        initialValue: [],\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n\r\n    const postEvent = useApi({\r\n        action: event => eventApi.postEvent(eventBaseUrl, event),\r\n        initialValue: [],\r\n        defer: true,\r\n        onSuccess: event => {\r\n             getEvents.setData(([event]).concat(getEvents.data));\r\n             toast.success('Event '+ event.Name+' was successfully added');\r\n        },\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n    \r\n    return ( \r\n        <Event  \r\n            isUserLoggedIn={isUserLoggedIn}\r\n            user={user}\r\n            isAddEventVisible={isAddEventVisible}\r\n            setAddEventToggle={setAddEventToggle}\r\n            getEvents={getEvents}\r\n            getOrganizations={getOrganizations}\r\n            onAddEvent={postEvent}\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  TextInput,\r\n  TextArea,\r\n  FormSelectOption,\r\n  FormSelect\r\n} from '@patternfly/react-core';\r\n\r\nexport default ({\r\n  organization,\r\n  setOrganization\r\n}) => {\r\n    const options = [\r\n      { value: 'select social issue', label: 'Select social issue', disabled: false },\r\n      { value: 'Motor', label: 'Motor', disabled: false },\r\n      { value: 'Sport', label: 'Sport', disabled: false },\r\n      { value: 'Finance', label: 'Finance', disabled: false },\r\n      { value: 'Technology', label: 'Technology', disabled: false },\r\n      { value: 'Intertainment', label: 'Intertainment', disabled: false },\r\n      { value: 'Tourism', label: 'Tourism', disabled: false }\r\n    ];\r\n\r\n    return (\r\n      <Form isHorizontal>\r\n        <FormGroup\r\n          label=\"Name\"\r\n          isRequired\r\n          fieldId=\"horizontal-form-name\"\r\n          helperText=\"Please provide organizational name\"\r\n        >\r\n          <TextInput\r\n            value={organization.name}\r\n            isRequired\r\n            type=\"text\"\r\n            id=\"horizontal-form-name\"\r\n            aria-describedby=\"horizontal-form-name-helper\"\r\n            name=\"horizontal-form-name\"\r\n            onChange={value => setOrganization({\r\n              ...organization, \r\n              name: value\r\n            })}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Email\" isRequired fieldId=\"horizontal-form-email\">\r\n          <TextInput\r\n            value={organization.email}\r\n            onChange={value => setOrganization({\r\n              ...organization, \r\n              email: value\r\n            })}\r\n            isRequired\r\n            type=\"email\"\r\n            id=\"horizontal-form-email\"\r\n            name=\"horizontal-form-email\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Social Issue\" fieldId=\"horizontal-form-title\">\r\n          <FormSelect\r\n            value={organization.socialIssue}\r\n            onChange={value => setOrganization({\r\n              ...organization, \r\n              socialIssue: value\r\n            })}\r\n            id=\"horzontal-form-title\"\r\n            name=\"horizontal-form-title\"\r\n          >\r\n            {options.map((option, index) => (\r\n              <FormSelectOption isDisabled={option.disabled} key={index} value={option.value} label={option.label} />\r\n            ))}\r\n          </FormSelect>\r\n        </FormGroup>\r\n        <FormGroup label=\"Description\" fieldId=\"horizontal-form-exp\">\r\n          <TextArea\r\n            value={organization.description}\r\n            onChange={value => setOrganization({\r\n              ...organization, \r\n              description: value\r\n            })}\r\n            name=\"horizontal-form-exp\"\r\n            id=\"horizontal-form-exp\"\r\n          />\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n}\r\n","import './map.css'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport appsettings from '../../../../../package.json'\r\n\r\nexport class MapContainer extends Component {\r\n  render() {\r\n    const { organization, setOrganization } = this.props\r\n    \r\n    const marker = (lat, long, label) => (\r\n      <Marker\r\n          onClick={place => setOrganization({\r\n            ...organization,\r\n            location: label\r\n          })}\r\n          title={label}\r\n          position={{ lat: lat, lng: long}}\r\n        />\r\n    )\r\n    \r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={12}\r\n        initialCenter={{ lat: -33.956584, lng: 18.540828 }}\r\n      >\r\n        {marker(-33.925225, 18.424164, 'Capetown-CBD')}\r\n        {marker(-33.938709, 18.469037, 'Observatory')}\r\n        {marker(-33.921301, 18.501493, 'Maitland')}\r\n        {marker(-33.964335, 18.475788, 'Rondebosch')}\r\n        {marker(-33.979350, 18.448153, 'Newlands')}\r\n        {marker(-33.986830, 18.472329, 'Claremont')}\r\n        {marker(-33.996833, 18.478623, 'Kenilworth')}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: appsettings.MapsApiKey\r\n})(MapContainer)","import './component.css'\r\n\r\nimport React, { useState } from 'react'\r\nimport { Wizard } from '@patternfly/react-core'\r\n\r\nimport { readImageURL, uploadAndGetImageUrl } from '../../../../shared/utils/images'\r\nimport OrganizationForm from '../organization-form'\r\nimport Map from '../google-maps/map'\r\n\r\nexport default ({\r\n    modalheader,\r\n    setWizardVisible,\r\n    setInProgress,\r\n    isAddOrganizationVisible,\r\n    setAddOrgarnizationToggle,\r\n    onAddOrganization\r\n}) => {\r\n    const [ organization, setOrganization ] = useState({\r\n      avatar:'',\r\n      name:'',\r\n      email:'',\r\n      socialIssue:'',\r\n      description:'',\r\n      location:''\r\n    })\r\n    const uploadAvatar = (\r\n        <label  className=\"wrap button\">\r\n            <input id='mail-upload' className=\"wrap button\" type=\"file\"  onChange={ file => {\r\n                readImageURL(file.target, organization, setOrganization)\r\n              }}\r\n            />\r\n            <img alt='organization-avatar' src={organization.avatar.length > 0 ? organization.avatar : 'http://www.pngall.com/wp-content/uploads/2/Upload-PNG-Image-File.png'} className=\"wrap button\" />\r\n        </label>\r\n    )\r\n\r\n    const steps = [\r\n      { name: 'Upload avatar', component:  uploadAvatar },\r\n      { \r\n        name: 'Organization form',\r\n        component: <OrganizationForm organization={organization} setOrganization={setOrganization} />\r\n      },\r\n      { name: `Location: ${organization.location}`, component: <Map organization={organization} setOrganization={setOrganization} /> , nextButtonText: 'Finish' }\r\n    ];\r\n\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Wizard\r\n          isOpen={isAddOrganizationVisible}\r\n          onClose={() => setAddOrgarnizationToggle(false)}\r\n          title=\"Add Organization\"\r\n          description=\"Please fill in organization details in each step.\"\r\n          steps={steps}\r\n          onSave={() => {\r\n             if(   organization.avatar.length > 0\r\n                && organization.description.length > 0\r\n                && organization.email.length > 0\r\n                && organization.socialIssue.length > 0\r\n                && organization.name.length > 0\r\n                && organization.location.length > 0)\r\n              {\r\n                uploadAndGetImageUrl(organization, onAddOrganization, setInProgress);\r\n                setAddOrgarnizationToggle(false)\r\n             }\r\n            }\r\n          }\r\n        />\r\n      </React.Fragment>\r\n    );\r\n}","import './component.css'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\r\n\r\nimport appsettings from '../../../../../package.json'\r\n\r\nexport class MapContainer extends Component {\r\n  render() {    \r\n    const getLocationCordinates = (location) =>{\r\n        if      (location == 'Capetown-CBD') return {lat: -33.925225, lng: 18.424164}\r\n        else if (location == 'Observatory')  return {lat: -33.938709, lng: 18.469037}\r\n        else if (location == 'Maitland')  return {lat: -33.921301, lng: 18.501493}\r\n        else if (location == 'Rondebosch')  return {lat: -33.964335, lng: 18.475788}\r\n        else if (location == 'Newlands')  return {lat: -33.979350, lng: 18.448153}\r\n        else if (location == 'Claremont')  return {lat: -33.986830, lng: 18.472329}\r\n        else if (location == 'Kenilworth')  return {lat: -33.996833, lng: 18.478623}\r\n    }\r\n    const { location }  = this.props;\r\n    const locationCordonates = getLocationCordinates(location);\r\n\r\n    return (\r\n      <Map\r\n        className='maps'\r\n        google={this.props.google}\r\n        zoom={13}\r\n        initialCenter={{ lat: locationCordonates.lat, lng: locationCordonates.lng }}\r\n      >\r\n        <Marker\r\n          title={location}\r\n          position={{ lat: locationCordonates.lat, lng: locationCordonates.lng}}\r\n        />\r\n     </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: appsettings.MapsApiKey\r\n})(MapContainer)","import './component.css'\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Bullseye, Button } from '@patternfly/react-core';\r\n\r\nimport GoogleMaps from '../google-maps/component'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    'margin-bottom': '1rem'\r\n  },\r\n  media: {\r\n    height: '20rem',\r\n    width: '45rem',\r\n    display: 'table-cell',\r\n    'background-size': 'cover'\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  }\r\n}));\r\n\r\nexport default ({\r\n  user,\r\n  isUserLoggedIn,\r\n  organization,\r\n  addSubscription\r\n}) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n\r\n  return (\r\n    <Bullseye>\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={organization.Avatar}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {organization.Name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {organization.Description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions disableSpacing>\r\n        <Button\r\n          className={'read-link-button'}\r\n          isDisabled={!isUserLoggedIn} \r\n          variant=\"link\"\r\n          onClick={() => {\r\n              organization.Subscriptions.filter(s => s.UserId === user.Id).length === 0 \r\n              && addSubscription.execute({organisationId: organization.Id, userId: user.Id})\r\n            }}\r\n          >\r\n            {organization.Subscriptions.length}{' Subscriptions'}\r\n        </Button>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography className='typography-centered' gutterBottom variant=\"h5\" component=\"h2\">\r\n            {organization.SocialIssue}\r\n          </Typography>\r\n          <Typography className='maps' paragraph>\r\n            <GoogleMaps location={organization.Location} />\r\n          </Typography>\r\n          <Typography className='typography-centered' variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {organization.Email}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n    </Bullseye>\r\n  );\r\n}","import './component.css'\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  PageSection, PageSectionVariants,\r\n  Card, CardBody\r\n} from '@patternfly/react-core';\r\n\r\nimport Spinner from '../../../shared/components/spinner/component'\r\nimport Wizard from '../wizard/page/component'\r\nimport OrganizationCard from '../organization-card/page/component'\r\n\r\nexport default ({\r\n  isUserLoggedIn,\r\n  user,\r\n  isAddOrganizationVisible,\r\n  setAddOrgarnizationToggle,\r\n  getOrganizations,\r\n  onAddOrganization,\r\n  addSubscription\r\n}) => {\r\n  const [inProgress, setInProgress] = useState(false);\r\n\r\n  return (\r\n    <Spinner\r\n      isLoading={getOrganizations.inProgress || inProgress || onAddOrganization.inProgress}\r\n      text='Loading organizations...'\r\n    >\r\n      <PageSection variant={PageSectionVariants.light}>\r\n        <Card className='mx-auto' >\r\n          <CardBody >\r\n            {getOrganizations.data.map((organization, key) =>\r\n              <OrganizationCard key={key}\r\n                isUserLoggedIn={isUserLoggedIn}\r\n                user={user}\r\n                organization={organization}\r\n                addSubscription={addSubscription}\r\n              />\r\n            )}\r\n            <Wizard\r\n              modalheader={'Add Organization'}\r\n              isAddOrganizationVisible={isAddOrganizationVisible}\r\n              setAddOrgarnizationToggle={setAddOrgarnizationToggle}\r\n              setInProgress={setInProgress}\r\n              onAddOrganization={onAddOrganization}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </PageSection>\r\n    </Spinner>\r\n  );\r\n}","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport useApi from '../../../shared/components/react-use-api'; \r\n\r\nimport { organizationApi } from '../../../api';\r\nimport { organizationBaseUrl } from '../../../shared/constants/api-selectors'\r\n\r\nimport Organization from './component';\r\n\r\nexport default ({\r\n    isUserLoggedIn,\r\n    isAddOrganizationVisible,\r\n    setAddOrgarnizationToggle,\r\n    user\r\n}) => {\r\n    const getOrganizations = useApi({\r\n        action: () => organizationApi.getOrganizations(organizationBaseUrl),\r\n        initialValue: [],\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n\r\n    const postOrganization = useApi({\r\n        action: organization => organizationApi.postOrganization(organizationBaseUrl, organization),\r\n        initialValue: [],\r\n        defer: true,\r\n        onSuccess: organization => {\r\n             getOrganizations.setData(([organization]).concat(getOrganizations.data));\r\n             toast.success('Organization '+organization.Name+' was successfully added');\r\n        },\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n    \r\n    const addSubscription = useApi({\r\n        action: subscription => organizationApi.postSubscription(organizationBaseUrl, subscription),\r\n        initialValue: [],\r\n        defer: true,\r\n        onSuccess: subscription => {\r\n            getOrganizations.setData(getOrganizations.data.map(o => (\r\n                o.Id == subscription.OrganisationId ? {\r\n                    ...o,\r\n                    Subscriptions: o.Subscriptions.concat(subscription)\r\n                } : o\r\n            )));\r\n            toast.success('Subscribed successfully.');\r\n        },\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n\r\n    return ( \r\n        <Organization  \r\n            isUserLoggedIn={isUserLoggedIn}\r\n            user={user}\r\n            isAddOrganizationVisible={isAddOrganizationVisible}\r\n            setAddOrgarnizationToggle={setAddOrgarnizationToggle}\r\n            getOrganizations={getOrganizations}\r\n            onAddOrganization={postOrganization}\r\n            addSubscription={addSubscription} \r\n        />\r\n    );\r\n};\r\n","import { BackgroundImageSrc } from '@patternfly/react-core';\r\n\r\nexport const images = {\r\n    [BackgroundImageSrc.lg]: require('@patternfly/react-styles/css/assets/images/pfbg_1200.jpg'),\r\n    [BackgroundImageSrc.sm]: require('@patternfly/react-styles/css/assets/images/pfbg_768.jpg'),\r\n    [BackgroundImageSrc.sm2x]: require('@patternfly/react-styles/css/assets/images/pfbg_768@2x.jpg'),\r\n    [BackgroundImageSrc.xs]: require('@patternfly/react-styles/css/assets/images/pfbg_576.jpg'),\r\n    [BackgroundImageSrc.xs2x]: require('@patternfly/react-styles/css/assets/images/pfbg_576@2x.jpg'),\r\n    [BackgroundImageSrc.filter]: require('@patternfly/react-styles/css/assets/images/background-filter.svg')\r\n  };\r\n\r\nexport default images;","import React, {useState } from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  TextInput,\r\n  Button\r\n} from '@patternfly/react-core';\r\nimport { Spinner } from \"react-bootstrap\"\r\n\r\nexport const SignUpForm = ({\r\n  onUserSignup\r\n}) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n     \r\n    return (\r\n      <Form >\r\n        <FormGroup\r\n          label=\"Name\"\r\n          isRequired\r\n          fieldId=\"name\"\r\n          helperText=\"Please provide your full name\"\r\n        >\r\n          <TextInput\r\n            value={name}\r\n            isRequired\r\n            type=\"text\"\r\n            id=\"name\"\r\n            aria-describedby=\"name-helper\"\r\n            name=\"name\"\r\n            onChange={(value) => setName(value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Email\" isRequired fieldId=\"email\">\r\n          <TextInput\r\n            value={email}\r\n            onChange={(value) => setEmail(value)}\r\n            isRequired\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Password\" isRequired fieldId=\"password\">\r\n          <TextInput\r\n            value={password}\r\n            onChange={(value) => setPassword(value)}\r\n            isRequired\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <Button \r\n            variant={onUserSignup.inProgress ? 'link' : 'primary'} \r\n            icon={onUserSignup.inProgress && <Spinner animation=\"border\" variant=\"primary\" />} \r\n            isDisabled={!name || !email || !password} \r\n            onClick={() => onUserSignup.execute({'name': name, 'email': email, 'password': password})}>\r\n            Signup\r\n        </Button>\r\n      </Form>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;","import React, {useState } from 'react';\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  TextInput,\r\n  Button\r\n} from '@patternfly/react-core';\r\nimport { Spinner } from \"react-bootstrap\"\r\n\r\nexport const LoginForm = ({\r\n  onUserLogin,\r\n  setIsUserLoggedIn\r\n}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    return (\r\n      <Form >  \r\n        <FormGroup label=\"Email\" isRequired fieldId=\"email\">\r\n          <TextInput\r\n            value={email}\r\n            onChange={(value) => setEmail(value)}\r\n            isRequired\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup label=\"Password\" isRequired fieldId=\"password\">\r\n          <TextInput\r\n            value={password}\r\n            onChange={(value) => setPassword(value)}\r\n            isRequired\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button \r\n            variant={onUserLogin.inProgress ? 'link' : 'primary'} \r\n            icon={onUserLogin.inProgress && <Spinner animation=\"border\" variant=\"primary\" />} \r\n            isDisabled={!email || !password} \r\n            onClick={() => onUserLogin.execute({'username': email, 'password': password})}>\r\n            Login\r\n        </Button>\r\n      </Form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\n\r\nimport {\r\n  LoginMainFooterBandItem,\r\n  LoginPage\r\n} from '@patternfly/react-core';\r\nimport Feeds from '../../events/page/component';\r\n\r\nimport brandImg from '../../../shared/utils/logo/full.png';\r\nimport images from '../../../shared/utils/patternfly-bg-images'\r\nimport SignUpForm from '../signup'\r\nimport LoginForm from '../login'\r\nimport PageWrapper from '../../../shared/components/page-wrapper/page/component'\r\n\r\nexport const SignIn = ({\r\n  isUserLoggedIn,\r\n  user,\r\n  onUserLogin,\r\n  onUserSignup\r\n}) => {\r\n  const [loginToggle, setLoginToggle] = useState(true)\r\n\r\n  const signUpForAccountMessage = (\r\n      <LoginMainFooterBandItem>\r\n        {loginToggle ? 'Need an account?' : 'Already have an account?'} \r\n        <a href=\"#\" onClick={ () => setLoginToggle(!loginToggle)}> \r\n          {loginToggle ? 'Sign up' : 'Login'}\r\n        </a>\r\n      </LoginMainFooterBandItem>\r\n  );\r\n\r\n  const isLoggedIn = onUserLogin.inProgress \r\n                    || onUserSignup.inProgress\r\n                    || onUserLogin.data === null \r\n                    || (onUserLogin.data.length === 0 && onUserSignup.data.length === 0)\r\n\r\n  return (\r\n        isLoggedIn\r\n        ? <LoginPage\r\n            footerListVariants=\"inline\"\r\n            brandImgSrc={brandImg}\r\n            brandImgAlt=\"COP logo\"\r\n            backgroundImgSrc={images}\r\n            backgroundImgAlt=\"Images\"\r\n            textContent=\"\r\n            This is a community organisation portal for Cape Town based organisations to upload a profile of what they do and social issues they work on\"\r\n            loginTitle={loginToggle ? 'Log in to your account' : 'Create an account'}\r\n            loginSubtitle=\"Please use your email as username\"\r\n            signUpForAccountMessage={signUpForAccountMessage}\r\n          >\r\n          {loginToggle \r\n            ? <LoginForm onUserLogin={onUserLogin} /> \r\n            : <SignUpForm onUserSignup={onUserSignup} />\r\n          }\r\n        </LoginPage>\r\n      : <PageWrapper \r\n          user={user}\r\n          isUserLoggedIn={isUserLoggedIn}\r\n        />\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport useApi from '../../../shared/components/react-use-api'; \r\n\r\nimport { loginApi } from '../../../api';\r\nimport { loginBaseUrl } from '../../../shared/constants/api-selectors'\r\n\r\nimport SignIn from './component';\r\n\r\nexport default ({\r\n}) => {\r\n    const [user, setUser] = useState();\r\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n\r\n    const login = useApi({\r\n        action: loginDetails => loginApi.login(loginBaseUrl, loginDetails.username, loginDetails.password),\r\n        initialValue: [],\r\n        defer: true,\r\n        onSuccess: user => {\r\n            if(user===null) throw Error;\r\n            toast.success(\"Welcome \"+user.Name);\r\n            setUser(user);\r\n            setIsUserLoggedIn(true);\r\n        },\r\n        onError: () => toast.error(\"Incorrect login details\")\r\n    }, []);\r\n    \r\n    const signup = useApi({\r\n        action: signupDetails => loginApi.signup(loginBaseUrl, signupDetails.name, signupDetails.email, signupDetails.password),\r\n        initialValue: [],\r\n        defer: true,\r\n        onSuccess: userSignup => {\r\n            if(userSignup.user == null) throw Error(userSignup.message);\r\n            toast.success(\"Signed up successfully\");\r\n        },\r\n        onError: (e) => toast.error(e.message)\r\n    }, []);\r\n\r\n    return ( \r\n        <SignIn  \r\n            isUserLoggedIn={isUserLoggedIn}\r\n            user={user}\r\n            onUserLogin={login} \r\n            onUserSignup={signup}\r\n        />\r\n    );\r\n};\r\n","\r\nimport './component.css'\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  PageHeader, Page, Dropdown, DropdownToggle, DropdownItem, DropdownPosition,\r\n  Nav, NavItem, NavList, NavVariants,\r\n} from '@patternfly/react-core';\r\nimport { UserIcon, PrivateIcon, PlusCircleIcon } from '@patternfly/react-icons'\r\n\r\nimport brandImg from '../../../utils/logo/full.png';\r\nimport Events from '../../../../components/events/page/container';\r\nimport Organizations from \"../../../../components/organization/page/container\";\r\nimport Login from \"../../../../components/login/page/container\";\r\n\r\nexport default ({\r\n  user,\r\n  isUserLoggedIn\r\n}) => {\r\n  const [isNavOpen, onNavToggle] = useState(false);\r\n  const [isOrganizationalDropdownOpen, onOrganizationalDropdownToggle] = useState(false);\r\n  const [isEventDropdownOpen, onEventDropdownToggle] = useState(false);\r\n  const [isAddEventVisible, setAddEventToggle] = useState(false);\r\n  const [isAddOrganizationVisible, setAddOrgarnizationToggle] = useState(false);\r\n  const [activeNavItem, setActiveNavItem] = useState({ events: true })\r\n\r\n  const logoProps = (\r\n    <a className=\"navbar-brand\" href=\"/\">\r\n      <img src={brandImg} alt=\"COP Enterprise Application\" />\r\n    </a>\r\n  );\r\n\r\n  const organizationsDropDown = (\r\n    <Dropdown\r\n      position={DropdownPosition.right}\r\n      toggle={<DropdownToggle onToggle={() => onOrganizationalDropdownToggle(!isOrganizationalDropdownOpen)}>Organizations</DropdownToggle>}\r\n      isOpen={isOrganizationalDropdownOpen}\r\n      isPlain\r\n      dropdownItems={[\r\n        <DropdownItem key='add' isDisabled={!isUserLoggedIn} onClick={() => setAddOrgarnizationToggle(true)}>\r\n          <PlusCircleIcon /> organization\r\n        </DropdownItem>,\r\n      ]}\r\n    />)\r\n\r\n  const eventsDropDown = (\r\n    <Dropdown\r\n      position={DropdownPosition.right}\r\n      toggle={<DropdownToggle onToggle={() => onEventDropdownToggle(!isEventDropdownOpen)}>Events</DropdownToggle>}\r\n      isOpen={isEventDropdownOpen}\r\n      isPlain\r\n      dropdownItems={[\r\n        <DropdownItem key='add' isDisabled={!isUserLoggedIn} onClick={() => setAddEventToggle(true)}>\r\n          <PlusCircleIcon /> event\r\n        </DropdownItem>,\r\n      ]}\r\n    />)\r\n\r\n  const nav = (\r\n    <Nav >\r\n      <NavList className='pull-right' variant={NavVariants.horizontal}>\r\n        <NavItem\r\n          onClick={() => setActiveNavItem({ events: true })}\r\n          isActive={activeNavItem.events && true}\r\n        >{eventsDropDown}\r\n        </NavItem>\r\n\r\n        <NavItem\r\n          onClick={() => setActiveNavItem({ organizations: true })}\r\n          isActive={activeNavItem.organizations && true}\r\n        > {organizationsDropDown}\r\n        </NavItem>\r\n\r\n        {isUserLoggedIn &&\r\n          <NavItem >\r\n            {user.Name} <UserIcon />\r\n          </NavItem>\r\n        }\r\n        <NavItem onClick={() => setActiveNavItem({ login: true })}\r\n        > Login <PrivateIcon />\r\n        </NavItem>\r\n      </NavList>\r\n    </Nav>\r\n  );\r\n\r\n  const pageHeader = (\r\n    <PageHeader\r\n      logo={logoProps}\r\n      topNav={nav}\r\n      showNavToggle\r\n      isNavOpen={isNavOpen}\r\n      onNavToggle={() => onNavToggle(!isNavOpen)}\r\n    />\r\n  )\r\n\r\n  return (\r\n    activeNavItem.login\r\n      ? <Login />\r\n      : <Page header={pageHeader} >\r\n        {activeNavItem.events &&\r\n          <Events \r\n            isAddEventVisible={isAddEventVisible}\r\n            setAddEventToggle={setAddEventToggle}\r\n            isUserLoggedIn={isUserLoggedIn}\r\n            user={user}\r\n          />\r\n        }\r\n        {activeNavItem.organizations &&\r\n          <Organizations\r\n            isAddOrganizationVisible={isAddOrganizationVisible}\r\n            setAddOrgarnizationToggle={setAddOrgarnizationToggle}\r\n            isUserLoggedIn={isUserLoggedIn}\r\n            user={user}\r\n          />\r\n        }\r\n      </Page>\r\n  );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport PageWrapper from '../shared/components/page-wrapper/page/component'\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" component={PageWrapper} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport '@patternfly/react-core/dist/styles/base.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToastContainer } from 'react-toastify';\n\nimport Routes from './root/routes';\nimport { register } from './serviceWorker';\n\nReactDOM.render(\n <div>\n  <Routes />\n  <ToastContainer />\n </div>,\n document.getElementById('root')\n);\nregister();","module.exports = __webpack_public_path__ + \"static/media/full.bede7c66.png\";"],"sourceRoot":""}